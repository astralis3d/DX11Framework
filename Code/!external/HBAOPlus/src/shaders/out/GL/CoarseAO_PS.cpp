static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * vec4(2.000000, 2.000000, 0.000000, 2.000000) + vec4(-1.000000, -1.000000, 0.000000, -1.000000)).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[2].xyzx).xyz, (Temp[2].xyzx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xyzx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyw;\n"
"    Temp[3].xyz = vec4(Temp[0].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * GlobalConstantBuffer_27[0].xyzx + Temp[3].xyzx).xyz;\n"
"    Temp[0].xyw = vec4(Temp[0].wwww * GlobalConstantBuffer_27[2].xyxz + Temp[3].xyxz).xyw;\n"
"    Temp[1].z = vec4(dot((Temp[0].xywx).xyz, (Temp[0].xywx).xyz)).z;\n"
"    Temp[1].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * Temp[1].zzzz).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[2].xyzx).xyz, (Temp[2].xyzx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xyzx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyw;\n"
"    Temp[3].xyz = vec4(Temp[0].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * GlobalConstantBuffer_27[0].xyzx + Temp[3].xyzx).xyz;\n"
"    Temp[0].xyw = vec4(Temp[0].wwww * GlobalConstantBuffer_27[2].xyxz + Temp[3].xyxz).xyw;\n"
"    Temp[1].z = vec4(dot((Temp[0].xywx).xyz, (Temp[0].xywx).xyz)).z;\n"
"    Temp[1].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * Temp[1].zzzz).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[2].xyzx).xyz, (Temp[2].xyzx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xyzx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * vec4(2.000000, 2.000000, 0.000000, 2.000000) + vec4(-1.000000, -1.000000, 0.000000, -1.000000)).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[0].z = vec4(dot((Temp[2].xywx).xyz, (Temp[2].xywx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xywx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyw;\n"
"    Temp[3].xyz = vec4(Temp[0].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * GlobalConstantBuffer_27[0].xyzx + Temp[3].xyzx).xyz;\n"
"    Temp[0].xyw = vec4(Temp[0].wwww * GlobalConstantBuffer_27[2].xyxz + Temp[3].xyxz).xyw;\n"
"    Temp[1].z = vec4(dot((Temp[0].xywx).xyz, (Temp[0].xywx).xyz)).z;\n"
"    Temp[1].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * Temp[1].zzzz).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[0].z = vec4(dot((Temp[2].xywx).xyz, (Temp[2].xywx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xywx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp_uint[0].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[0].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[0].xyw = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xywz.xyw;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyw;\n"
"    Temp[3].xyz = vec4(Temp[0].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * GlobalConstantBuffer_27[0].xyzx + Temp[3].xyzx).xyz;\n"
"    Temp[0].xyw = vec4(Temp[0].wwww * GlobalConstantBuffer_27[2].xyxz + Temp[3].xyxz).xyw;\n"
"    Temp[1].z = vec4(dot((Temp[0].xywx).xyz, (Temp[0].xywx).xyz)).z;\n"
"    Temp[1].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[0].xyw = vec4(Temp[0].xyxw * Temp[1].zzzz).xyw;\n"
"    Temp[1].z = Temp[0].z * 0.050000;\n"
"    Temp[1].z = PerPassConstantBuffer_0.f4Jitter.z * Temp[1].z + 1.000000;\n"
"    Temp[3].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[4].xy = vec4(Temp[1].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[1].w = Temp[0].z * 0.050000 + Temp[1].z;\n"
"    Temp[4].xyz = vec4(-Temp[2].xyzx + Temp[5].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[4].xyzx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].xyzx).xyz)).w;\n"
"    Temp[4].x = vec4(inversesqrt(Temp[2].w)).x;\n"
"    Temp[3].w = Temp[3].w * Temp[4].x + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[4].xy = vec4(Temp[3].xyxx * Temp[1].wwww).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[4].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[5].z = (textureLod(g_t0, Temp[4].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[4].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[5].xy = vec4(Temp[5].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].x = Temp[0].z * 0.050000 + Temp[1].w;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[5].xxyz).yzw;\n"
"    Temp[5].x = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).x;\n"
"    Temp[4].y = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[5].x)).z;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[4].z = Temp[5].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].z = clamp(Temp[4].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * Temp[4].xxxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[4].x;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[4].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].x;\n"
"    Temp[4].y = Temp[4].y * Temp[4].z + Temp[4].w;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].x = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[3].x)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].x * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].y * Temp[3].x + Temp[4].y;\n"
"    Temp[4].yz = vec4(PerPassConstantBuffer_0.f4Jitter.xxyx * vec4(0.000000, 0.707107, 0.707107, 0.000000)).yz;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].y = Temp[4].y + Temp[4].z;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[5].zw = vec4(Temp[1].zzzz * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[4].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].y)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * Temp[4].w;\n"
"    Temp[2].w = Temp[3].w * Temp[2].w + Temp[3].y;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[3].ywyy).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(inversesqrt(Temp[3].y)).w;\n"
"    Temp[3].w = Temp[3].w * Temp[4].w + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].z;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].y;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].y = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yw = vec4(Temp[1].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[2].w = Temp[3].w * Temp[3].y + Temp[2].w;\n"
"    Temp[3].yw = vec4(Temp[1].wwww * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[4].xxxx * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[6].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[3].yw = vec4(Temp[0].zzzz * Temp[5].xxxy).yw;\n"
"    Temp[3].yw = vec4(roundEven(Temp[3].yyyw)).yw;\n"
"    Temp[5].xy = vec4(Temp[3].ywyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).wyzx).w;\n"
"    Temp[3].yw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).yw;\n"
"    Temp[4].yz = vec4(Temp[4].wwww * Temp[3].yywy).yz;\n"
"    Temp[4].yzw = vec4(-Temp[2].xxyz + Temp[4].yyzw).yzw;\n"
"    Temp[3].y = vec4(dot((Temp[4].yzwy).xyz, (Temp[4].yzwy).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[0].xywx).xyz, (Temp[4].yzwy).xyz)).w;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].y)).y;\n"
"    Temp[3].w = Temp[3].w * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[3].y = Temp[3].y * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[3].x = Temp[3].w * Temp[3].y + Temp[3].x;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[3].z;\n"
"    Temp[3].y = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).y;\n"
"    Temp[5].y = vec4(-Temp[3].y).y;\n"
"    Temp[3].yz = vec4(Temp[1].zzzz * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].z = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).z;\n"
"    Temp[3].y = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).y;\n"
"    Temp[3].z = vec4(inversesqrt(Temp[1].z)).z;\n"
"    Temp[3].y = Temp[3].y * Temp[3].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].y = clamp(Temp[3].y, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[1].z = Temp[3].y * Temp[1].z + Temp[2].w;\n"
"    Temp[3].yz = vec4(Temp[1].wwww * Temp[5].xxyx).yz;\n"
"    Temp[3].yz = vec4(roundEven(Temp[3].yyzy)).yz;\n"
"    Temp[6].xy = vec4(Temp[3].yzyy * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[3].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).wyzx).w;\n"
"    Temp[4].yz = vec4(GlobalConstantBuffer_3.xyxx.xxyx * Temp[6].xxyx + GlobalConstantBuffer_4.xxxy.zzwz).yz;\n"
"    Temp[3].yz = vec4(Temp[3].wwww * Temp[4].yyzy).yz;\n"
"    Temp[3].yzw = vec4(-Temp[2].xxyz + Temp[3].yyzw).yzw;\n"
"    Temp[1].w = vec4(dot((Temp[3].yzwy).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[2].w = vec4(dot((Temp[0].xywx).xyz, (Temp[3].yzwy).xyz)).w;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[1].w)).y;\n"
"    Temp[2].w = Temp[2].w * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[2].w * Temp[1].w + Temp[3].x;\n"
"    Temp[3].xy = vec4(Temp[4].xxxx * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[3].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[2].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).w;\n"
"    Temp[3].x = vec4(dot((Temp[0].xywx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[3].y = vec4(inversesqrt(Temp[2].w)).y;\n"
"    Temp[3].x = Temp[3].x * Temp[3].y + -GlobalConstantBuffer_8;\n"
"    Temp[3].x = clamp(Temp[3].x, 0.0, 1.0);\n"
"    Temp[2].w = Temp[2].w * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[2].w = clamp(Temp[2].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[3].x * Temp[2].w + Temp[1].w;\n"
"    Temp[3].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[3].xy = vec4(roundEven(Temp[3].xyxx)).xy;\n"
"    Temp[3].xy = vec4(Temp[3].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[3].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[3].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[3].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[2].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[0].z = vec4(dot((Temp[2].xywx).xyz, (Temp[2].xywx).xyz)).z;\n"
"    Temp[0].x = vec4(dot((Temp[0].xywx).xyz, (Temp[2].xywx).xyz)).x;\n"
"    Temp[0].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + -GlobalConstantBuffer_8;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].z * GlobalConstantBuffer_7 + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].x * Temp[0].y + Temp[1].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[1].z * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[0].w = vec4(min(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp_uint[1].z = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].z)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[1].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Output0.x = -Temp[0].x * 0.062500 + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * vec4(2.000000, 2.000000, 2.000000, 0.000000) + vec4(-1.000000, -1.000000, -1.000000, 0.000000)).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2D g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;
static const char* g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL =
"#version 150\n"
"struct vec1 {\n"
"	float x;\n"
"};\n"
"struct uvec1 {\n"
"	uint x;\n"
"};\n"
"struct ivec1 {\n"
"	int x;\n"
"};\n"
"layout(std140) uniform;\n"
"uniform GlobalConstantBuffer {\n"
" 	uvec4 GlobalConstantBuffer_0;\n"
"	vec2 GlobalConstantBuffer_1;\n"
"	vec2 GlobalConstantBuffer_2;\n"
"	vec2 GlobalConstantBuffer_3;\n"
"	vec2 GlobalConstantBuffer_4;\n"
"	float GlobalConstantBuffer_5;\n"
"	float GlobalConstantBuffer_6;\n"
"	float GlobalConstantBuffer_7;\n"
"	float GlobalConstantBuffer_8;\n"
"	float GlobalConstantBuffer_9;\n"
"	float GlobalConstantBuffer_10;\n"
"	float GlobalConstantBuffer_11;\n"
"	int GlobalConstantBuffer_12;\n"
"	float GlobalConstantBuffer_13;\n"
"	float GlobalConstantBuffer_14;\n"
"	float GlobalConstantBuffer_15;\n"
"	float GlobalConstantBuffer_16;\n"
"	float GlobalConstantBuffer_17;\n"
"	float GlobalConstantBuffer_18;\n"
"	float GlobalConstantBuffer_19;\n"
"	float GlobalConstantBuffer_20;\n"
"	vec2 GlobalConstantBuffer_21;\n"
"	float GlobalConstantBuffer_22;\n"
"	float GlobalConstantBuffer_23;\n"
"	float GlobalConstantBuffer_24;\n"
"	float GlobalConstantBuffer_25;\n"
"	int GlobalConstantBuffer_26;\n"
"	vec4 GlobalConstantBuffer_27[4];\n"
"	float GlobalConstantBuffer_28;\n"
"	float GlobalConstantBuffer_29;\n"
"};\n"
"struct PerPassConstantBuffer_0_Type {\n"
"	vec4 f4Jitter;\n"
"	vec2 f2Offset;\n"
"	float fSliceIndex;\n"
"	uint uSliceIndex;\n"
"};\n"
"uniform PerPassConstantBuffer {\n"
" 	PerPassConstantBuffer_0_Type PerPassConstantBuffer_0;\n"
"};\n"
"uniform sampler2DArray g_t0;\n"
"uniform sampler2DMS g_t1;\n"
"vec4 Input0;\n"
"out  vec4 PixOutput0;\n"
"#define Output0 PixOutput0\n"
"vec4 Temp[8];\n"
"ivec4 Temp_int[8];\n"
"uvec4 Temp_uint[8];\n"
"void main()\n"
"{\n"
"    Input0.xy = gl_FragCoord.xy;\n"
"    Temp[0].xy = vec4(floor(Input0.xyxx)).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx * vec4(4.000000, 4.000000, 0.000000, 0.000000) + PerPassConstantBuffer_0.f2Offset.xyxx.xyxx).xy;\n"
"    Temp[0].zw = vec4(Temp[0].xxxy * GlobalConstantBuffer_1.xyxx.xxxy).zw;\n"
"    Temp[1].xy = vec4(Temp[0].zwzz * vec4(0.250000, 0.250000, 0.000000, 0.000000)).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[2].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[0].z = GlobalConstantBuffer_5 / Temp[2].z;\n"
"    Temp[0].w = GlobalConstantBuffer_24 / Temp[0].z;\n"
"    Temp[0].w = vec4(max(Temp[0].w, 1.000000)).w;\n"
"    Temp[0].z = Temp[0].w * Temp[0].z;\n"
"    Temp[1].z = GlobalConstantBuffer_25 / Temp[0].z;\n"
"    Temp[1].z = vec4(min(Temp[1].z, 1.000000)).z;\n"
"    Temp[0].z = Temp[0].z * Temp[1].z;\n"
"    Temp_uint[1].w = ((Temp[0].z)< (1.000000)) ? 0xFFFFFFFFu : 0u;\n"
"    if((Temp_uint[1].w)!=0u){\n"
"        Output0.x = vec4(1.000000).x;\n"
"        return;\n"
"    //ENDIF\n"
"    }\n"
"    Temp[3].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[2].xy = vec4(Temp[2].zzzz * Temp[3].xyxx).xy;\n"
"    Temp[0].xy = vec4(Temp[0].xyxx + GlobalConstantBuffer_21.xyxx.xyxx).xy;\n"
"    Temp_int[3].xy = ivec4(Temp[0].xyxx).xy;\n"
"    Temp[3].zw = vec4(vec4(0.000000, 0.000000, 0.000000, 0.000000)).zw;\n"
"    Temp[3].xyz = texelFetch(g_t1, ivec2((Temp_int[3]).xy), 0).xyz;\n"
"    Temp[3].xyz = vec4(Temp[3].xyzx * GlobalConstantBuffer_28 + GlobalConstantBuffer_29).xyz;\n"
"    Temp[4].xyz = vec4(Temp[3].yyyy * GlobalConstantBuffer_27[1].xyzx).xyz;\n"
"    Temp[3].xyw = vec4(Temp[3].xxxx * GlobalConstantBuffer_27[0].xyxz + Temp[4].xyxz).xyw;\n"
"    Temp[3].xyz = vec4(Temp[3].zzzz * GlobalConstantBuffer_27[2].xyzx + Temp[3].xywx).xyz;\n"
"    Temp[0].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[3].xyzx).xyz)).x;\n"
"    Temp[0].x = vec4(inversesqrt(Temp[0].x)).x;\n"
"    Temp[3].xyz = vec4(Temp[0].xxxx * Temp[3].xyzx).xyz;\n"
"    Temp[0].x = Temp[0].w * Temp[0].w;\n"
"    Temp[0].x = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].x).x;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_7;\n"
"    Temp[0].y = Temp[1].z * Temp[1].z;\n"
"    Temp[0].y = vec4(vec4(1.000000, 1.000000, 1.000000, 1.000000) / Temp[0].y).y;\n"
"    Temp[0].x = Temp[0].y * Temp[0].x;\n"
"    Temp[0].y = Temp[0].z * 0.050000;\n"
"    Temp[0].y = PerPassConstantBuffer_0.f4Jitter.z * Temp[0].y + 1.000000;\n"
"    Temp[4].xyz = vec4(PerPassConstantBuffer_0.f4Jitter.xyyx * vec4(1.000000, -1.000000, -0.707107, 0.000000)).xyz;\n"
"    Temp[1].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[0].w = Temp[0].z * 0.050000 + Temp[0].y;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[0].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[2].w = Temp[0].z * 0.050000 + Temp[0].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * Temp[2].wwww).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[0].z = Temp[0].z * 0.050000 + Temp[2].w;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[5].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).x;\n"
"    Temp[5].y = vec4(inversesqrt(Temp[5].w)).y;\n"
"    Temp[5].x = Temp[5].x * Temp[5].y + -GlobalConstantBuffer_8;\n"
"    Temp[5].x = clamp(Temp[5].x, 0.0, 1.0);\n"
"    Temp[5].y = Temp[5].w * Temp[0].x + 1.000000;\n"
"    Temp[5].y = clamp(Temp[5].y, 0.0, 1.0);\n"
"    Temp[5].x = Temp[5].y * Temp[5].x;\n"
"    Temp[3].w = Temp[4].w * Temp[3].w + Temp[5].x;\n"
"    Temp[4].xy = vec4(Temp[4].xyxx * Temp[0].zzzz).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[5].x = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[5].x)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[4].y = Temp[5].x * Temp[0].x + 1.000000;\n"
"    Temp[4].y = clamp(Temp[4].y, 0.0, 1.0);\n"
"    Temp[3].w = Temp[4].x * Temp[4].y + Temp[3].w;\n"
"    Temp[4].xy = vec4(PerPassConstantBuffer_0.f4Jitter.xyxx * vec4(0.707107, 0.707107, 0.000000, 0.000000)).xy;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].y;\n"
"    Temp[4].w = Temp[4].x + Temp[4].y;\n"
"    Temp[5].y = vec4(-Temp[4].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[4].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).z;\n"
"    Temp[5].w = vec4(inversesqrt(Temp[4].w)).w;\n"
"    Temp[5].z = Temp[5].z * Temp[5].w + -GlobalConstantBuffer_8;\n"
"    Temp[5].z = clamp(Temp[5].z, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[0].x + 1.000000;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[4].w = Temp[4].w * Temp[5].z;\n"
"    Temp[1].z = Temp[1].w * Temp[1].z + Temp[4].w;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[1].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[1].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[1].w * Temp[0].x + 1.000000;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[1].w + Temp[3].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].zw = vec4(Temp[0].yyyy * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].zw = vec4(Temp[0].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].zw = vec4(Temp[2].wwww * Temp[5].xxxy).zw;\n"
"    Temp[5].zw = vec4(roundEven(Temp[5].zzzw)).zw;\n"
"    Temp[6].xy = vec4(Temp[5].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[7].z = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[7].xy = vec4(Temp[7].zzzz * Temp[5].zwzz).xy;\n"
"    Temp[6].xyz = vec4(-Temp[2].xyzx + Temp[7].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[6].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[6].xyzx).xyz)).w;\n"
"    Temp[5].z = vec4(inversesqrt(Temp[3].w)).z;\n"
"    Temp[4].w = Temp[4].w * Temp[5].z + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[4].y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107 + Temp[4].x;\n"
"    Temp[5].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].xy = vec4(Temp[0].yyyy * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].x * Temp[3].w + Temp[1].z;\n"
"    Temp[4].xy = vec4(Temp[0].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[2].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[6].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[6].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[6].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[6].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].zwzz).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = -PerPassConstantBuffer_0.f4Jitter.y * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.x * -0.000000 + -PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * -0.707107;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * -0.707107 + -Temp[3].w;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(-0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.000000 + PerPassConstantBuffer_0.f4Jitter.y;\n"
"    Temp[3].w = PerPassConstantBuffer_0.f4Jitter.y * 0.000000 + -PerPassConstantBuffer_0.f4Jitter.x;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[5].xy = vec4(Temp[0].yyyy * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[4].w * Temp[3].w + Temp[1].z;\n"
"    Temp[5].xy = vec4(Temp[0].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[5].xy = vec4(Temp[2].wwww * Temp[4].xyxx).xy;\n"
"    Temp[5].xy = vec4(roundEven(Temp[5].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[5].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[5].xyxx).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[3].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[5].x = vec4(inversesqrt(Temp[3].w)).x;\n"
"    Temp[4].w = Temp[4].w * Temp[5].x + -GlobalConstantBuffer_8;\n"
"    Temp[4].w = clamp(Temp[4].w, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].w * Temp[3].w + Temp[1].w;\n"
"    Temp[4].xy = vec4(Temp[0].zzzz * Temp[4].xyxx).xy;\n"
"    Temp[4].xy = vec4(roundEven(Temp[4].xyxx)).xy;\n"
"    Temp[5].xy = vec4(Temp[4].xyxx * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].w = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzwx).w;\n"
"    Temp[5].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[5].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].wwww * Temp[5].xyxx).xy;\n"
"    Temp[4].xyw = vec4(-Temp[2].xyxz + Temp[4].xyxw).xyw;\n"
"    Temp[3].w = vec4(dot((Temp[4].xywx).xyz, (Temp[4].xywx).xyz)).w;\n"
"    Temp[4].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[4].xywx).xyz)).x;\n"
"    Temp[4].y = vec4(inversesqrt(Temp[3].w)).y;\n"
"    Temp[4].x = Temp[4].x * Temp[4].y + -GlobalConstantBuffer_8;\n"
"    Temp[4].x = clamp(Temp[4].x, 0.0, 1.0);\n"
"    Temp[3].w = Temp[3].w * Temp[0].x + 1.000000;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[1].w = Temp[4].x * Temp[3].w + Temp[1].w;\n"
"    Temp[4].x = PerPassConstantBuffer_0.f4Jitter.x * 0.707107 + -Temp[4].z;\n"
"    Temp[3].w = vec4(dot((PerPassConstantBuffer_0.f4Jitter.yxyy).xy, (vec4(0.707107, -0.707107, 0.000000, 0.000000)).xy)).w;\n"
"    Temp[4].y = vec4(-Temp[3].w).y;\n"
"    Temp[4].zw = vec4(Temp[0].yyyy * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].y = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).y;\n"
"    Temp[3].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[4].z = vec4(inversesqrt(Temp[0].y)).z;\n"
"    Temp[3].w = Temp[3].w * Temp[4].z + -GlobalConstantBuffer_8;\n"
"    Temp[3].w = clamp(Temp[3].w, 0.0, 1.0);\n"
"    Temp[0].y = Temp[0].y * Temp[0].x + 1.000000;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].y = Temp[3].w * Temp[0].y + Temp[1].z;\n"
"    Temp[4].zw = vec4(Temp[0].wwww * Temp[4].xxxy).zw;\n"
"    Temp[4].zw = vec4(roundEven(Temp[4].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[4].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[4].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[4].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[0].w = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[1].z = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[3].w = vec4(inversesqrt(Temp[0].w)).w;\n"
"    Temp[1].z = Temp[1].z * Temp[3].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[0].w * Temp[0].x + 1.000000;\n"
"    Temp[0].w = clamp(Temp[0].w, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].z * Temp[0].w + Temp[1].w;\n"
"    Temp[1].zw = vec4(Temp[2].wwww * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[5].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[5].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[6].z = (textureLod(g_t0, Temp[5].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].zw = vec4(GlobalConstantBuffer_3.xyxx.xxxy * Temp[5].xxxy + GlobalConstantBuffer_4.xxxy.zzzw).zw;\n"
"    Temp[6].xy = vec4(Temp[6].zzzz * Temp[1].zwzz).xy;\n"
"    Temp[5].xyz = vec4(-Temp[2].xyzx + Temp[6].xyzx).xyz;\n"
"    Temp[1].z = vec4(dot((Temp[5].xyzx).xyz, (Temp[5].xyzx).xyz)).z;\n"
"    Temp[1].w = vec4(dot((Temp[3].xyzx).xyz, (Temp[5].xyzx).xyz)).w;\n"
"    Temp[2].w = vec4(inversesqrt(Temp[1].z)).w;\n"
"    Temp[1].w = Temp[1].w * Temp[2].w + -GlobalConstantBuffer_8;\n"
"    Temp[1].w = clamp(Temp[1].w, 0.0, 1.0);\n"
"    Temp[1].z = Temp[1].z * Temp[0].x + 1.000000;\n"
"    Temp[1].z = clamp(Temp[1].z, 0.0, 1.0);\n"
"    Temp[0].w = Temp[1].w * Temp[1].z + Temp[0].w;\n"
"    Temp[1].zw = vec4(Temp[0].zzzz * Temp[4].xxxy).zw;\n"
"    Temp[1].zw = vec4(roundEven(Temp[1].zzzw)).zw;\n"
"    Temp[1].xy = vec4(Temp[1].zwzz * GlobalConstantBuffer_1.xyxx.xyxx + Temp[1].xyxx).xy;\n"
"    Temp[1].z = vec4(PerPassConstantBuffer_0.fSliceIndex).z;\n"
"    Temp[4].z = (textureLod(g_t0, Temp[1].xyz, 0.000000).yzxw).z;\n"
"    Temp[1].xy = vec4(GlobalConstantBuffer_3.xyxx.xyxx * Temp[1].xyxx + GlobalConstantBuffer_4.xxxy.zwzz).xy;\n"
"    Temp[4].xy = vec4(Temp[4].zzzz * Temp[1].xyxx).xy;\n"
"    Temp[1].xyz = vec4(-Temp[2].xyzx + Temp[4].xyzx).xyz;\n"
"    Temp[0].z = vec4(dot((Temp[1].xyzx).xyz, (Temp[1].xyzx).xyz)).z;\n"
"    Temp[1].x = vec4(dot((Temp[3].xyzx).xyz, (Temp[1].xyzx).xyz)).x;\n"
"    Temp[1].y = vec4(inversesqrt(Temp[0].z)).y;\n"
"    Temp[1].x = Temp[1].x * Temp[1].y + -GlobalConstantBuffer_8;\n"
"    Temp[1].x = clamp(Temp[1].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[0].z * Temp[0].x + 1.000000;\n"
"    Temp[0].x = clamp(Temp[0].x, 0.0, 1.0);\n"
"    Temp[0].x = Temp[1].x * Temp[0].x + Temp[0].w;\n"
"    Temp[0].x = Temp[0].x * GlobalConstantBuffer_10;\n"
"    Temp[0].x = Temp[0].y * GlobalConstantBuffer_9 + Temp[0].x;\n"
"    Temp[0].x = Temp[0].x * 0.031250;\n"
"    Temp[0].y = Temp[2].z * GlobalConstantBuffer_22 + 1.000000;\n"
"    Temp[0].y = Temp[0].y * GlobalConstantBuffer_23;\n"
"    Temp[0].y = clamp(Temp[0].y, 0.0, 1.0);\n"
"    Temp[0].x = vec4(dot((Temp[0].xxxx).xy, (Temp[0].yyyy).xy)).x;\n"
"    Output0.x = -Temp[0].x + 1.000000;\n"
"    Output0.x = clamp(Output0.x, 0.0, 1.0);\n"
"    return;\n"
"}\n"
;

namespace Generated
{
    void CoarseAO_PS::Create(DevicePointer Device)
    {
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_0_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_0_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_0_FETCH_GBUFFER_NORMAL_2_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_0_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_1_GL));
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Create(Device, g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL, sizeof(g_CoarseAO_PS_ENABLE_FOREGROUND_AO_1_ENABLE_BACKGROUND_AO_1_ENABLE_DEPTH_THRESHOLD_1_FETCH_GBUFFER_NORMAL_2_GL));
    }

    void CoarseAO_PS::Release(DevicePointer Device)
    {
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_0][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_0][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_0][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_0].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_1].Release(Device);
        m_Shader[ShaderPermutations::ENABLE_FOREGROUND_AO_1][ShaderPermutations::ENABLE_BACKGROUND_AO_1][ShaderPermutations::ENABLE_DEPTH_THRESHOLD_1][ShaderPermutations::FETCH_GBUFFER_NORMAL_2].Release(Device);
    }
}
