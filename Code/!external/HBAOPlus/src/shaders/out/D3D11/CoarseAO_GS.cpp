#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint   x   
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xy
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output_siv o2.x, rendertarget_array_index
dcl_maxout 3
mov o0.xyzw, v[0][0].xyzw
mov o1.xy, v[0][1].xyxx
mov o2.x, cb1[1].w
emit_stream m0
mov o0.xyzw, v[1][0].xyzw
mov o1.xy, v[1][1].xyxx
mov o2.x, cb1[1].w
emit_stream m0
mov o0.xyzw, v[2][0].xyzw
mov o1.xy, v[2][1].xyxx
mov o2.x, cb1[1].w
emit_stream m0
ret 
// Approximately 0 instruction slots used
#endif

const BYTE g_CoarseAO_GS_D3D11[] =
{
     68,  88,  66,  67, 193,  72, 
    205,  99,  60,  76, 114, 103, 
    198,  76, 168, 118,  44, 179, 
    204,  42,   1,   0,   0,   0, 
    168,   2,   0,   0,   3,   0, 
      0,   0,  44,   0,   0,   0, 
    132,   0,   0,   0,  24,   1, 
      0,   0,  73,  83,  71,  78, 
     80,   0,   0,   0,   2,   0, 
      0,   0,   8,   0,   0,   0, 
     56,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,  15,   0,   0, 
     68,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,   3,   0,   0, 
     83,  86,  95,  80, 111, 115, 
    105, 116, 105, 111, 110,   0, 
     84,  69,  88,  67,  79,  79, 
     82,  68,   0, 171, 171, 171, 
     79,  83,  71,  53, 140,   0, 
      0,   0,   3,   0,   0,   0, 
      8,   0,   0,   0,   0,   0, 
      0,   0,  92,   0,   0,   0, 
      0,   0,   0,   0,   1,   0, 
      0,   0,   3,   0,   0,   0, 
      0,   0,   0,   0,  15,   0, 
      0,   0,   0,   0,   0,   0, 
    104,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   1,   0, 
      0,   0,   3,  12,   0,   0, 
      0,   0,   0,   0, 113,   0, 
      0,   0,   0,   0,   0,   0, 
      4,   0,   0,   0,   1,   0, 
      0,   0,   2,   0,   0,   0, 
      1,  14,   0,   0,  83,  86, 
     95,  80, 111, 115, 105, 116, 
    105, 111, 110,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0,  83,  86,  95,  82, 101, 
    110, 100, 101, 114,  84,  97, 
    114, 103, 101, 116,  65, 114, 
    114,  97, 121,  73, 110, 100, 
    101, 120,   0, 171,  83,  72, 
     69,  88, 136,   1,   0,   0, 
     80,   0,   2,   0,  98,   0, 
      0,   0, 106,   8,   0,   1, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
      2,   0,   0,   0,  97,   0, 
      0,   5, 242,  16,  32,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   0, 
     95,   0,   0,   4,  50,  16, 
     32,   0,   3,   0,   0,   0, 
      1,   0,   0,   0,  93,  24, 
      0,   1, 143,   0,   0,   3, 
      0,   0,  17,   0,   0,   0, 
      0,   0,  92,  40,   0,   1, 
    103,   0,   0,   4, 242,  32, 
     16,   0,   0,   0,   0,   0, 
      1,   0,   0,   0, 101,   0, 
      0,   3,  50,  32,  16,   0, 
      1,   0,   0,   0, 103,   0, 
      0,   4,  18,  32,  16,   0, 
      2,   0,   0,   0,   4,   0, 
      0,   0,  94,   0,   0,   2, 
      3,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   6,  50,  32,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     32,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6,  18,  32,  16,   0, 
      2,   0,   0,   0,  58, 128, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 117,   0, 
      0,   3,   0,   0,  17,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     32,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   6,  50,  32,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6,  18,  32,  16,   0, 
      2,   0,   0,   0,  58, 128, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 117,   0, 
      0,   3,   0,   0,  17,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   6, 242,  32,  16,   0, 
      0,   0,   0,   0,  70,  30, 
     32,   0,   2,   0,   0,   0, 
      0,   0,   0,   0,  54,   0, 
      0,   6,  50,  32,  16,   0, 
      1,   0,   0,   0,  70,  16, 
     32,   0,   2,   0,   0,   0, 
      1,   0,   0,   0,  54,   0, 
      0,   6,  18,  32,  16,   0, 
      2,   0,   0,   0,  58, 128, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0, 117,   0, 
      0,   3,   0,   0,  17,   0, 
      0,   0,   0,   0,  62,   0, 
      0,   1
};

namespace Generated
{
    void CoarseAO_GS::Create(DevicePointer Device)
    {
        m_Shader.Create(Device, g_CoarseAO_GS_D3D11, sizeof(g_CoarseAO_GS_D3D11));
    }

    void CoarseAO_GS::Release(DevicePointer Device)
    {
        m_Shader.Release(Device);
    }
}
